# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kGkPcYB1fxIrOa-xE9vGnf0DPK1yjFPR
"""

import ipywidgets as widgets
import numpy as np
import matplotlib.pyplot as pit

vo = widgets.FloatSlider(
    value=7.5,
    min=0,
    max=20,
    step=0.1,
    description='vo (m/s):',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

ang = widgets.FloatSlider(
    value=7.5,
    min=0,
    max=20,
    step=1,
    description='Ang ("):',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

start = button = widgets.Button(
    description='Click me',
    disabled=False,
    button_style='success', # 'success', 'info', 'warning', 'danger' or ''
    tooltip='Click me',
    icon='check' # (FontAwesome names without the `fa-` prefix)
)

hmaxText = widgets.FloatText(
    value=0.0,
    description='Any:',
    disabled=True
)

dmaxText = widgets.FloatText(
    value=0.0,
    description='Any:',
    disabled=True
)

tvText = widgets.FloatText(
    value=0.0,
    description='Any:',
    disabled=True
)

#Funcion de lanzamiento
def startTrajectory(s):
  print("Lanzamiento")
  print("Vo: ", vo. value)
  print("Ang: ", ang. value)
  x0 = 0
  y0 = 0
  #Transformar angulos a radianes
  angRad = np.radians(ang.value)

  #altura maxima
  hmax = y0 + (vo.value**2 * (np.sin(angRad)**2))* 0.5 / 9.8

  #Distancia maxima

  dmax = (vo.value**2 * np.sin(2*angRad))/ 9.8

  # Tiempo de vuelo
  tv = 2* (vo.value * np.sin(angRad))/9.8

  #imprimir los valores en las cajas de texto
  hmaxText.value = np.round(hmax, 3)
  dmaxText.value = np.round(dmax, 3)
  tvText.value = np.round(tv, 3)

  #Calcular la trayectoria (x.y)
  t = np.linspace(0, tv, 100)
  x = x0 + vo.value * np.cos(angRad)* t
  y = y0 + vo.value * np.sin(angRad) *t - 4.9 * t**2
  #plot x,y
  pit.plot(x,y)
  pit.xlabel("x (m)")
  pit.ylabel ("y (m)")
  pit.title("taryectoria de la parabola")
  pit.show()


#Enlazar funcion con el boton
start.on_click(startTrajectory)

#visualizar control
display(vo, ang, start, hmaxText, dmaxText, tvText )